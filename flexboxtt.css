/*-------flex tutorial css------
.flex-container{
    display: flex;
    background-color: teal;
    align-items: center;
    flex-wrap: wrap;
    justify-content: center;

}

.flex-container > div{
    margin: 1px;
    width: 100px;
    padding: 20px;
    font-size: 10px;
    background-color: antiquewhite;
    text-align: center;
}
------*/

/*-----------CSS SELECTORS----
simple selectors select elements based on a specific name , id , class(Id, class element.class *-->>universal  element,element)

2.combinator selectors select elemetns based on a specific relationship between them
there are four  combinators  
i) descendant combinator(space)--matches all elements that are descendant of a specified element 
ii) child selector (>)--
iii) adjacent sibling selector(+)
iv)general sibling selector(~)

3. pseudo-class selectors select elements based on a certain state
Note: a:hover MUST come after a:link and a:visited in the CSS definition in order to be effective. 
Note: a:active MUST come after a:hover in the CSS definition in order to be effective.

simple tooltip {hover over me to show element}
p {
    display: none;
    background-color: yellow;
    padding: 20px;
}
div:hover p {
    display: block;
}

:first-child--matches a specified element that is the first child of another element.
all css pseudo elements ::

4. pseudo element selectors select and style the part of an element 
5. attribute selectors select elements based on an attribute or attribute value
----*/

/*----------------------CSS GRID TUTORIAL------------/*


.grid-container{

    border-radius: 10px;
    display: grid;
    margin-left: 50px;
    height: 100vh;
    grid-template-columns: 1fr 1fr 1fr 1fr ;
    grid-gap: 10px;
    grid-template-rows: 10% 30% 10% 20% 15% 15% ;
}
.grid-container > div{
    display: flex;
    align-items: center;
    border-radius: 5px;
    justify-content: center;
}

.one{
    background-color: rgb(224, 173, 64);
    grid-column: 1/5;
}
.two{
    background: tomato;
}
.four{
    background: tomato;
    grid-column: 4/5;
    grid-row: 2/4;
}
.three{
    background: rgb(233, 164, 85);
    grid-column: 2/4;
    grid-row: 2/4;
}
.five{
    background: brown;
    grid-row: 3/5;
}
.six{
    background: coral;
    grid-column: 2/5;
}
.seven{
    background: crimson;
    grid-column: 1/3;
}
.eight{
    background: darkmagenta;
    grid-column: 1/3;
}
.nine{
    background: darkorchid;
    grid-column: 3/5;
    grid-row: 5/7;
}

*/

/*-------------grid responsiveness---------*/
:root{
    --main-radius:5px;
    --main-padding:5px;
}

.container{
    display: grid;
    height: 100vh;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: 0.2fr 2fr 1.3fr 0.5fr;
    grid-template-areas: 
        'nav nav nav nav'
        'sidebar main main main '
        'sidebar component1 component2 component3'
        'sidebar footer footer footer'
    ;
    grid-gap: 0.2rem;
    font-weight: 700;
    text-transform: uppercase;
    font-family: 'Times New Roman', Times, serif;
    color: antiquewhite;
    text-align: center;
    
}

.navbar{
    background: linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, rgba(29, 208, 87, 1) 55%, rgba(0, 212, 255, 1) 100%);
    grid-area: nav;
    border-radius: var(--main-radius);
    padding: var(--main-padding);
}
.sidebar{
    background: rgb(110, 152, 213);
    background: linear-gradient(173deg, rgba(110, 152, 213, 0.916725352112676) 0%, rgba(93, 255, 145, 1) 49%, rgba(13, 134, 159, 1) 100%);
    grid-area: sidebar;
    border-radius: var(--main-radius);
    padding: var(--main-padding);
}
.main{
    background: rgb(108, 58, 193);
    background: linear-gradient(77deg, rgba(58, 193, 175, 0.917) 0%, rgb(50, 217, 58) 49%, rgba(16, 234, 182, 0.8772887323943662) 100%);
    grid-area: main;
    border-radius: var(--main-radius);
    padding: var(--main-padding);
}

.component1{
    grid-area: component1;
    background: linear-gradient(90deg, rgba(17, 230, 176, 0.561) 0%, rgba(29, 208, 87, 1) 55%, rgba(0, 212, 255, 1) 100%);
    border-radius: var(--main-radius);
    padding: var(--main-padding);
}
.component2{
    grid-area: component2;
    border-radius: var(--main-radius);
    padding: var(--main-padding);
    background: linear-gradient(90deg, rgba(91, 236, 176, 0.76) 0%, rgba(29, 208, 87, 1) 55%, rgba(0, 212, 255, 1) 100%);
}
.component3{
    grid-area: component3;
    background: linear-gradient(90deg, rgba(33, 192, 197, 0.568) 0%, rgba(29, 208, 87, 1) 55%, rgba(0, 212, 255, 1) 100%);
    border-radius: var(--main-radius);
    padding: var(--main-padding);
}
.footer{
    grid-area: footer;
    background: rgb(76, 134, 238);
    background: linear-gradient(140deg, rgba(76, 134, 238, 0.916725352112676) 0%, rgba(105, 209, 235, 1) 49%, rgba(103, 235, 204, 0.8772887323943662) 100%);
    border-radius: var(--main-radius);
    padding: var(--main-padding);

}

@media only screen and (max-width: 550px){
    .container{
        grid-template-columns: 1fr;
        grid-template-rows: 0.4fr 0.4fr 2.2fr 1.2fr 1.2fr 1.2fr 1fr;
        grid-template-areas: 
        "nav"
        "sidebar"
        "main"
        "component1"
        "component2"
        "component3"
        "footer"
        ;
    }
}